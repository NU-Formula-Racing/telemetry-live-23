{"version":3,"sources":["components/shared/Context.jsx","components/sidebar/Toggle.jsx","components/shared/BasicContainer.jsx","components/shared/VertSpacer.jsx","components/sidebar/SensorButton.jsx","components/shared/HorizIndicator.jsx","components/hooks/useMouse.jsx","components/shared/DnDList.jsx","components/sidebar/SensorDropdown.jsx","components/sidebar/GroupDropDown.jsx","components/sidebar/SensorSelector.jsx","components/sidebar/NameInput.jsx","components/sidebar/AddressInput.jsx","assets/logo.png","components/sidebar/Sidebar.jsx","assets/cloud.svg","assets/local.svg","components/main/topbar/SearchBar.jsx","components/shared/HorizSpacer.jsx","assets/upload.svg","components/main/topbar/Upload.jsx","components/main/topbar/SVGButton.jsx","components/shared/RowHolder.jsx","assets/stop.svg","assets/play.svg","assets/pause.svg","components/main/topbar/ButtonTray.jsx","components/shared/StyledStatus.jsx","components/main/topbar/Topbar.jsx","components/main/data-display/NumGraphToggle.jsx","assets/scrollleft.svg","assets/scrollright.svg","assets/zoomin.svg","assets/zoomout.svg","assets/recent.svg","components/main/data-display/Graph.jsx","components/main/data-display/Graphs.jsx","components/shared/VertIndicator.jsx","components/shared/DnDFlex.jsx","components/main/data-display/Number.jsx","components/main/data-display/Numbers.jsx","components/main/data-display/DataDisplay.jsx","components/main/Main.jsx","App.jsx","index.js"],"names":["Context","React","createContext","ContextProvider","Consumer","props","myFunction","updateItem","state","mouseX","mouseY","dragging","sensorData","session","selectedSensors","live","setMouseCoords","x","y","setState","setDragging","setSensorData","setSession","setSelectedSensors","setIsLive","Provider","value","this","children","Component","Toggle","Holder","ToggleButton","active","isLive","onClick","Circle","styled","div","BasicContainer","Container","onMouseEnter","hoverHandler","onMouseLeave","exitHandler","isFlex","flex","expand","scroll","VertSpacer","Spacer","SensorButton","e","previous","setCurrentSensors","filter","element","label","target","forceUpdate","Div","sendIndex","removeIndex","transluscent","isDragging","isHovering","SmallVertSpace","sendStart","removeStart","StyledButton","removeSelected","button","VertIndicator","Line","useMouse","useState","pos","setPos","update","clientX","clientY","useEffect","window","addEventListener","removeEventListener","DndList","context","useContext","startInd","hoverInd","vIndex","sector","canDrop","proppedChildren","setChildren","dndRef","useRef","handleResize","map","child","index","cloneElement","prevState","handleHover","bounds","getSector","drop","getDrop","temp","items","splice","setCurrentItems","Math","floor","getVindex","l","length","ih","height","vspace","startSector","current","getBoundingClientRect","i","_x","_y","dy","top","left","right","FlexTray","ref","SensorDropdown","options","ExampleSensorsByGroups","e1","group","selectedGroup","sensors","e2","id","flat","selected","desiredSensors","prevProps","updateSelectedGroup","updateOptions","newSelectedGroup","indexOf","concat","desiredSensor","ExampleSensorsLettersToNames","push","reqBody","fetch","method","headers","body","JSON","stringify","then","response","json","user","a","console","log","closeMenuOnSelect","placeholder","isMulti","every","onChange","addSelected","styles","multiValueLabel","base","width","clearSelected","contextType","GroupDropDown","SmallVerticalSpacer","StyledSelect","setSelectedGroup","ExampleGroups","StyledOption","select","option","SensorSelector","SelectorContainer","newState","currentSensors","NameInput","focus","setFocus","input","setInput","StyledInput","type","onInput","onFocus","onBlur","setSessionName","onKeyDown","keyCode","blur","handleKeyPress","AddressInput","setSocketURL","connected","Sidebar","SidebarContainer","src","logo","alt","url","filterOptions","data","name","toLowerCase","includes","dateString","date","fileList","Date","day","getDate","month","getMonth","getFullYear","Option","components","IconOption","icon","cloud_icon","local_icon","style","display","float","marginLeft","address","printAddress","inputArray","res","newDict","splitDates","split","parseDates","Items","SearchBar","handleFocus","searchVal","handleChange","myRef","createRef","myAPI","APIResponse","zIndex","isClearable","isSearchable","filterOption","getOptionLabel","HorizSpacer","ButtonSpacer","img","SVGButton","StyledSVG","setViewState","RowHolder","StyledHolder","Topbar","stop","viewState","play","pause","StyledStatus","Status","valid","receiving","NumGraphToggle","handleClick","dispType","setDispType","ReferenceFrame","StyledDiv","LabelHolder","Label","Overlay","isLeft","initData","time","arr","obj","initialise","Graph","curveType","getX","d","getY","xScaleInit","scaleLinear","domain","max","range","yScaleInit","lineData","xScale","yScale","start","end","graphData","setGD","isScrolling","setScrolling","wheelTimeout","count","setCount","orient","setOrient","updateData","gd","sensorArr","sensorName","tvPair","firstTime","unixVal","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","parseUnixToStr","handleTooltip","lockWheel","clearTimeout","setTimeout","zoom","dir","amt","ceil","graphsArr","document","getElementsByClassName","click","cancelWheel","preventDefault","passive","start_idx","fake_idx","end_idx","xscale","yscale","slice","updateScales","bisectTime","bisector","useTooltip","showTooltip","tooltipData","hideTooltip","tooltipTop","tooltipLeft","useCallback","event","localPoint","graph_offset","x0","invert","d0","d1","valueOf","GraphContainer","checkKey","className","scrollleft","scrollright","zoomin","zoomout","recent","jump","jump_recent","SVGContainer","onWheel","abs","deltaX","deltaY","handleMouseScroll","fill","size","refX","rx","ry","Group","GridRows","scale","stroke","GridColumns","AxisBottom","tickFormat","parseInt","cleanSeconds","milDiff","round","parseSecToTime","AxisLeft","j","r","cx","cy","LinePath","curve","allCurves","strokeWidth","strokeOpacity","shapeRendering","markerMid","markerStart","markerEnd","AreaClosed","Bar","onTouchStart","onTouchMove","onMouseMove","from","to","pointerEvents","strokeDasharray","fillOpacity","TooltipWithBounds","random","Clickable","ButtonTray","Graphs","setInterval","rerender","DndFlex","indicator","flexProps","cols","extraCols","rows","indicatorCoords","itemHeight","vSpace","itemWidth","dx","Number","NumberContainer","translucent","Value","unit","percentage","toString","join","Numbers","interval","clearInterval","SemiContext","DataDisplay","scrollAmt","whatthefuck","containerRef","setContainerRef","updateWidth","content","clientWidth","scrollHeight","handleScroll","scrollTop","onScroll","Main","MainContainer","App","handleMouseDown","handleMouseUp","sessionName","updateContextLive","onMouseDown","onMouseUp","GlobalStyle","next","socketURL","updateSocket","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b53e68a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst Context = React.createContext(null);\r\nconst ContextConsumer = Context.Consumer;\r\n\r\n\r\nclass ContextProvider extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      mouseX: 0,\r\n      mouseY: 0,\r\n      dragging: false,\r\n      sensorData: [], // make object than list\r\n      session: \"\",\r\n      selectedSensors: [],\r\n      live: false,\r\n      setMouseCoords: (x, y) => {\r\n        this.setState({ mouseX: x, mouseY: y });\r\n      },\r\n      setDragging: (x) => {\r\n        this.setState({ dragging: x });\r\n      },\r\n      setSensorData: (x) => {\r\n        this.setState({sensorData: x})\r\n      },\r\n      setSession: (x) => {\r\n        this.setState({session: x})\r\n      },\r\n      setSelectedSensors: (x) => {\r\n        this.setState({selectedSensors: x})\r\n      },\r\n      setIsLive: (x) => {\r\n        this.setState({ live: x });\r\n      },\r\n    };\r\n  }\r\n  myFunction = () => {\r\n    this.props.updateItem(this.state)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Context, ContextProvider, ContextConsumer }","import styled from 'styled-components';\r\nimport { Context } from \"../shared/Context\"\r\nimport React, { useCallback, useState, useEffect, useRef, useContext } from 'react'\r\n\r\nexport default function Toggle(props) {\r\n\r\n  return (\r\n    <Holder>\r\n      <>\r\n        Live Data:\r\n      </>\r\n      <ToggleButton\r\n        active={props.isLive}\r\n        onClick={() => props.setIsLive(!props.isLive)}\r\n      >\r\n        <Circle active={props.isLive} />\r\n      </ToggleButton>\r\n    </Holder>\r\n  );\r\n}\r\n\r\nconst Holder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ToggleButton = styled.div`\r\n  width: 46px;\r\n  height: 24px;\r\n  position: relative;\r\n  background: ${props => (props.active ? '#42D060' : '#ebebeb')};\r\n  transition: background 0.2s ease;\r\n  border-radius: 12px;\r\n`;\r\n\r\nconst Circle = styled.div`\r\n  position: absolute;\r\n  top: 2px;\r\n  left: ${props => (props.active ? 24 : 2)}px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: #fff;\r\n  transition: left 0.2s ease;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function BasicContainer(props) {\r\n  const handleEnter = () => {\r\n    if (props.hoverHandler) {\r\n      props.hoverHandler();\r\n    }\r\n  }\r\n\r\n  const handleLeave = () => {\r\n    if (props.exitHandler) {\r\n      props.exitHandler();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      onMouseEnter={() => {handleEnter()}}\r\n      onMouseLeave={() => {handleLeave()}}\r\n      isFlex={props.flex}\r\n      expand={props.expand}\r\n      scroll={props.scroll}\r\n      // grabbable={props.grabbable}\r\n      // grabbing={props.grabbing}\r\n    ><div></div>\r\n      {props.children}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: calc(100% - 18px);\r\n  border: 1px solid #818181;\r\n  border-radius: 9px;\r\n  padding: 8px;\r\n  height: ${props => (props.expand ? '100%' : 'auto')};\r\n  overflow-y: ${props => (props.scroll ? 'scroll' : 'visible')};\r\n  display: ${props => (props.isFlex ? 'flex' : 'auto')};\r\n  align-items: center;\r\n  justify-content: center;\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: #dadce0;\r\n    border: 4px solid transparent;\r\n    border-radius: 8px;\r\n    background-clip: padding-box;  \r\n  }\r\n  \r\n  ::-webkit-scrollbar {\r\n    width: 16px;\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function VertSpacer() {\r\n  return(\r\n    <Spacer />\r\n  );\r\n}\r\n\r\nconst Spacer = styled.div`\r\n  height: 20px;\r\n`;","\r\nimport {Component} from 'react'\r\nimport styled from 'styled-components'\r\nimport BasicContainer from \"../shared/BasicContainer\";\r\n\r\nclass SensorButton extends Component {\r\n    \r\n    removeSelected(e){\r\n        let previous = this.props.selectedSensors\r\n        this.props.setCurrentSensors(previous.filter((element) => element.label !== e.target.value))\r\n        this.forceUpdate()\r\n    }\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n        <Div\r\n            onMouseEnter={() => {this.props.sendIndex()}}\r\n            onMouseLeave={() => {this.props.removeIndex()}}\r\n            transluscent={this.props.isDragging}\r\n            target={this.props.isHovering}\r\n        >\r\n            <SmallVertSpace/>\r\n            <BasicContainer\r\n                hoverHandler={() => {this.props.sendStart()}}\r\n                exitHandler={() => {this.props.removeStart()}}\r\n            >\r\n                <Holder>\r\n                    <>{this.props.label}</>\r\n                    <StyledButton\r\n                    onClick={e => this.removeSelected(e)}\r\n                    value={this.props.label}>\r\n                        ╳\r\n                    </StyledButton>\r\n                </Holder> \r\n            </BasicContainer>\r\n            <SmallVertSpace/>\r\n        </Div>\r\n        );\r\n    }\r\n}\r\nexport default SensorButton;\r\n\r\nconst Holder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nlet StyledButton = styled.button`\r\n  width: 20px;\r\n  height: 20x;\r\n  font-size: 8px;\r\n  cursor: pointer;\r\n  border: 0px;\r\n  background-color: white;\r\n`;\r\n\r\nlet SmallVertSpace = styled.div`\r\n  height: 5px;\r\n`;\r\n\r\nconst Div = styled.div`\r\n    opacity: ${props => ((props.transluscent) ? '0.4' : '1')};\r\n`;","import { useEffect } from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nexport default function VertIndicator(props) {\r\n  return(\r\n    <Line y={props.y} />\r\n  )\r\n}\r\n\r\nconst Line = styled.div`\r\n  width: 100%;\r\n  border-top: 1.5px solid #564fe6;\r\n  position: absolute;\r\n  left: 0px;\r\n  top: ${props => props.y}px;\r\n`;","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useMouse() {\r\n  const [pos, setPos] = useState({\r\n    mouseX: 0,\r\n    mouseY: 0\r\n  });\r\n\r\n  const update = (e) => {\r\n    setPos({ mouseX: e.clientX, mouseY: e.clientY });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('mousemove', update);\r\n\r\n    return () => window.removeEventListener('mousemouse', update);\r\n  }, []);\r\n\r\n  return pos;\r\n}","import React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport HorizIndicator from './HorizIndicator';\r\n\r\nimport useMouse from '../hooks/useMouse';\r\n\r\nimport { Context } from './Context';\r\n\r\n// Works Kind of like DnD Flex\r\n// Expected Props\r\n/// items             dnd items\r\n/// vspace            space between items\r\n/// setCurrentItems   item setter\r\nexport default function DndList(props) {\r\n  let context = useContext(Context);\r\n\r\n  const [state, setState] = useState({\r\n    startInd: -1,\r\n    hoverInd: -1,\r\n    vIndex: 0,\r\n    sector: 0,\r\n    canDrop: true,\r\n  });\r\n  const [proppedChildren, setChildren] = useState(props.children);\r\n\r\n  const dndRef = useRef(null);\r\n\r\n  const { mouseX, mouseY } = useMouse();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleResize();\r\n  }, [props.children]);\r\n\r\n  // Assigns Dnd Props to Children\r\n  useEffect(() => {\r\n    const addProps = (initProps) => {\r\n      const handleUnhover = () => {\r\n        if (!context.dragging) {\r\n          setState(prevState => ({\r\n            ...prevState,\r\n            startInd: -1\r\n          }));\r\n        }\r\n      }\r\n      \r\n      const updatedChildren = initProps.map((child, index) => {\r\n        return React.cloneElement(child, {\r\n          sendIndex: () => setState(prevState => ({\r\n            ...prevState,\r\n            hoverInd: index,\r\n          })),\r\n          sendStart: () => handleHover(index),\r\n          removeIndex: () => setState(prevState => ({\r\n            ...prevState,\r\n            hoverInd: -1\r\n          })),\r\n          removeStart: () => handleUnhover(),\r\n          isDragging: context.dragging && index === state.startInd,\r\n          isHovering: context.dragging && index === state.hoverInd && index !== state.startInd && state.canDrop,\r\n        });\r\n      });\r\n  \r\n      return updatedChildren;\r\n    }\r\n\r\n    setChildren(addProps(props.children));\r\n  }, [props.children, state.startInd, state.hoverInd]);\r\n\r\n  useEffect(() => {\r\n    if (state.startInd >= 0 && !context.dragging && state.canDrop) {\r\n      if (state.bounds) {\r\n        let sector = getSector(mouseX, mouseY);\r\n        if (sector >= 0) {\r\n          let drop = getDrop(sector);\r\n          \r\n          let temp = props.items[state.startInd];\r\n          props.items.splice(state.startInd, 1);\r\n          props.items.splice(drop, 0, temp);\r\n          props.setCurrentItems(props.items);\r\n          handleHover(Math.floor(sector / 2));\r\n        }\r\n      }\r\n    }\r\n  }, [context.dragging])\r\n\r\n  useEffect(() => {\r\n    if (state.bounds) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        vIndex: getVindex(getSector(mouseX, mouseY)),\r\n      }));\r\n    }\r\n  }, [mouseY]);\r\n\r\n  useEffect(() => {\r\n    if (state.bounds) {\r\n      let l = props.children.length;\r\n      let ih = (state.bounds.height - (l * props.vspace * 2)) / l;\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        sector: props.vspace + (ih / 2),\r\n      }))\r\n    }\r\n  }, [state.bounds]);\r\n\r\n  const getDrop = (sector) => {\r\n    let startSector = 2 * state.startInd;\r\n    if (startSector - 1 <= sector && sector <= startSector + 2) {\r\n      return state.startInd;\r\n    } else if (sector < startSector) {\r\n      return state.startInd - Math.floor((startSector - sector) / 2);\r\n    } else {\r\n      return state.startInd + Math.floor((sector - startSector - 1) / 2);\r\n    }\r\n  }\r\n  \r\n  const getVindex = (sector) => {\r\n    let startSector = 2 * state.startInd;\r\n\r\n    return state.startInd - Math.floor((startSector - sector) / 2);\r\n  }\r\n\r\n  const handleResize = () => {\r\n    if (dndRef.current) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        bounds: dndRef.current.getBoundingClientRect(),\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleHover = (i) => {\r\n    if (!context.dragging) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        startInd: i,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const getSector = (_x, _y) => {\r\n    let dy = _y - state.bounds.top;\r\n    if (dy < 0 || dy > state.bounds.height || _x < state.bounds.left || _x > state.bounds.right) {\r\n      return -1;\r\n    }\r\n    let l = props.children.length;\r\n    for (let i = 0; i < (l * 2); i++) {\r\n      if ((state.sector * (i + 1)) > dy) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  return (\r\n    <FlexTray\r\n      ref={dndRef}\r\n      onMouseEnter={() => {setState(prevState => ({\r\n        ...prevState,\r\n        canDrop: true,\r\n      }))}}\r\n      onMouseLeave={() => {setState(prevState => ({\r\n        ...prevState,\r\n        canDrop: false,\r\n      }))}}\r\n    >\r\n      {\r\n        (context.dragging && state.startInd >= 0 && state.canDrop) &&\r\n        <HorizIndicator\r\n          y={(state.vIndex * state.sector * 2) - 0.5}\r\n        />\r\n      }      \r\n      {proppedChildren}\r\n      <div></div>\r\n    </FlexTray>\r\n  );\r\n}\r\n\r\nconst FlexTray = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  user-select: none;\r\n  position: relative;\r\n`;","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport styled from \"styled-components\";\r\nimport SensorButton from './SensorButton';\r\n\r\nimport { Context} from '../shared/Context';\r\n\r\nimport DndList from '../shared/DnDList';\r\n\r\nexport default class SensorDropdown extends Component {\r\n    static contextType = Context;\r\n    constructor(props){\r\n        super(props)\r\n        // all available sensor options\r\n        this.options = ExampleSensorsByGroups.map(e1 => (\r\n            e1.group === this.props.selectedGroup ? e1.sensors.map((e2, i) => ({value: e2, label: e2, id: i})) : []\r\n        )).flat();\r\n        // only sensors selected by user from available options\r\n        this.selected = []\r\n        this.desiredSensors = []\r\n        this.sensorData = []\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {                                           \r\n        if (prevProps.selectedGroup !== this.props.selectedGroup) {\r\n            this.updateSelectedGroup(this.props.selectedGroup)\r\n            this.updateOptions(this.props.selectedGroup)\r\n            \r\n        }\r\n    }\r\n    updateSelectedGroup(newSelectedGroup) {\r\n        this.setState({selectedGroup: newSelectedGroup}) \r\n    }\r\n    updateOptions(newSelectedGroup) {\r\n        this.options = ExampleSensorsByGroups.map(e1 => (\r\n            e1.group === this.props.selectedGroup ? e1.sensors.map((e2, i) => ({value: e2, label: e2, id: i})) : []\r\n        )).flat();\r\n    }\r\n\r\n    addSelected(value){\r\n        if (value != null && -1 === this.props.selectedSensors.indexOf(value[0])){\r\n          this.props.setCurrentSensors(this.props.selectedSensors.concat(value))\r\n          let desiredSensor = ExampleSensorsLettersToNames[value[0][\"value\"]]\r\n          this.desiredSensors.push(desiredSensor)\r\n          this.context.setSelectedSensors(this.desiredSensors)\r\n          // REPLACE THIS\r\n          // PART OF SESSION TOBE DYNAMIC\r\n          let reqBody = {}\r\n          if (this.context.live) {\r\n          reqBody = {\"desiredSensors\": this.desiredSensors, \"nameOfSession\": this.context.session}\r\n          }\r\n          else {\r\n            reqBody = {\"desiredSensors\": this.desiredSensors, \"nameOfSession\": this.context.session[\"name\"]}\r\n          }\r\n          // console.log(reqBody)\r\n\r\n          // POST request with current sensors selected to use for datpoint plotting later\r\n          var sensorData = fetch(\"http://flask-env.eba-hqnsx3mt.us-east-2.elasticbeanstalk.com/get-sensors\", \r\n          {\r\n            method: \"POST\", \r\n            headers: { 'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': \"*\"\r\n          },\r\n          body: JSON.stringify(reqBody)\r\n          })\r\n          .then((response) => response.json())\r\n          .then((user) => {\r\n          return user;\r\n          });\r\n  \r\n          const retrieveSensorAPI = () => {\r\n          sensorData.then((a) => {\r\n          this.sensorData = a;\r\n          this.context.setSensorData(a)\r\n          console.log(this.context.sensorData)\r\n          });\r\n          };\r\n          retrieveSensorAPI();\r\n\r\n        }\r\n    }\r\n\r\n    clearSelected(e){\r\n      this.props.setCurrentSensors([])\r\n    }\r\n\r\n    removeSelected(e){\r\n        let previous = this.props.selectedSensors\r\n        this.props.setCurrentSensors(previous.filter((element) => element.label !== e.target.value))\r\n        this.forceUpdate()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Select\r\n                closeMenuOnSelect={false}\r\n                placeholder={\"Select from \" + this.props.selectedGroup + \"...\"}\r\n                isMulti={true}\r\n                options={this.options.filter((element) => (this.props.selectedSensors.every((e) => e.label !== element.label)))}\r\n                value={this.props.selectedGroup}\r\n                onChange={(e) => this.addSelected(e)}\r\n                styles={{\r\n                    multiValueLabel: (base) => ({\r\n                      ...base,\r\n                      width:'100px',\r\n                      'font-size':'16px'\r\n                    }),\r\n                  }}\r\n                />\r\n                <SmallVertSpace/>\r\n                {this.props.selectedSensors.length !== 0 &&  <StyledButton onClick={e => this.clearSelected()}>Clear All</StyledButton>}\r\n                <DndList\r\n                  vspace={5}\r\n                  items={this.props.selectedSensors}\r\n                  setCurrentItems={(x) => this.props.setCurrentSensors(x)}\r\n                >\r\n                  {this.props.selectedSensors.map((e, i) => (\r\n                    <SensorButton \r\n                      key={i}\r\n                      onClick={this.removeSelected} \r\n                      label={e.label} \r\n                      selectedSensors={this.props.selectedSensors} \r\n                      setCurrentSensors={this.props.setCurrentSensors}\r\n                    />\r\n                  ))}\r\n                </DndList>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n//{this.selected.map((x) => (<p>{x.label}</p>))}\r\nlet ExampleSensorsByGroups = [\r\n    {group:\"Safety Sensors\", sensors: [\"Front Left Wheel Speed\", \"Brake Pressure\", \"HV Battery Voltage\", \"Battery Temperature\", \"Coolant Temperature\", \"Power Output\", \"State of Charge (SoC)\", \"Throttle\", \"Motor Temperature\"]},\r\n    {group:\"Chassis Sensors\", sensors: [\"Sensor Q\", \"Sensor R\", \"Sensor F\"]},\r\n    {group:\"Aero Sensors\", sensors: [\"Sensor G\", \"Sensor H\", \"Sensor I\"]},\r\n    {group:\"Suspension Sensors\", sensors: [\"Sensor J\", \"Sensor K\", \"Sensor L\"]},\r\n    {group:\"Powertrain Sensors\", sensors: [\"Sensor M\", \"Sensor N\", \"Sensor O\"]}\r\n  ];\r\n\r\n\r\nlet ExampleSensorsLettersToNames = {\r\n  \"Front Left Wheel Speed\": \"FL_WHEEL_SPEED\", \r\n  \"Brake Pressure\": \"BRAKE_PRESSURE\",\r\n  \"HV Battery Voltage\": \"HV_BATTERY_VOLTAGE\", \r\n  \"Battery Temperature\": \"BATTERY_TEMP\",\r\n  \"Coolant Temperature\": \"COOLANT_TEMP\", \r\n  \"Power Output\": \"POWER_OUTPUT\", \r\n  \"State of Charge (SoC)\": \"CHARGE_STATE\",\r\n  \"Throttle\": \"THROTTLE\", \r\n  \"Motor Temperature\": \"MOTOR_TEMP\", \r\n}\r\n\r\n\r\nlet StyledButton = styled.button`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  cursor: pointer;\r\n  border: 0px;\r\n  background-color: white;\r\n`\r\nlet SmallVertSpace = styled.div`\r\n  height: 10px;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nexport default function GroupDropDown(props){\r\n\r\n    const handleOption = (i) => {\r\n        props.setSelectedGroup(i.target.value)\r\n    }\r\n \r\n    return (\r\n        <>\r\n            <>Select Sensor Group:</>\r\n            <SmallVerticalSpacer></SmallVerticalSpacer>\r\n            <StyledSelect onChange={handleOption}>\r\n             {ExampleGroups.map((e, i) => \r\n                (<StyledOption key={i}>{e.group}</StyledOption>))}\r\n            </StyledSelect>\r\n        </>\r\n    )\r\n}\r\n\r\n// update so that the selector fills the container\r\nexport const StyledSelect = styled.select`\r\n    width: 220px;\r\n    height: 30px;\r\n    font-size: 14px;\r\n    font-family: 'Open Sans';\r\n    cursor: pointer;\r\n`;\r\nexport const StyledOption = styled.option`\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const SmallVerticalSpacer = styled.div`\r\n    height: 10px;\r\n`;\r\n\r\nlet ExampleGroups = [\r\n    {id: 1, group:\"Safety Sensors\"},\r\n    {id: 2, group:\"Chassis Sensors\"},\r\n    {id: 3, group:\"Aero Sensors\"},\r\n    {id: 4, group:\"Suspension Sensors\"},\r\n    {id: 5, group:\"Powertrain Sensors\"}\r\n];","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport BasicContainer from '../shared/BasicContainer';\r\nimport VertSpacer from '../shared/VertSpacer';\r\nimport SensorDropdown from './SensorDropdown';\r\nimport GroupDropDown from './GroupDropDown';\r\n\r\nexport default function SensorSelector(props) {\r\n  let [selectedGroup, setSelectedGroup] = useState('Safety Sensors');\r\n\r\n  return(\r\n    <SelectorContainer>\r\n      <BasicContainer>\r\n        <GroupDropDown \r\n        selectedGroup={selectedGroup}\r\n        setSelectedGroup={(newState) => setSelectedGroup(newState)}\r\n        />\r\n      </BasicContainer>\r\n      <VertSpacer />\r\n      <BasicContainer expand scroll>\r\n        <SensorDropdown \r\n        selectedGroup={selectedGroup}\r\n        selectedSensors={props.currentSensors}\r\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\r\n        />\r\n      </BasicContainer>\r\n    </SelectorContainer>\r\n  );\r\n}\r\n\r\nconst SelectorContainer = styled.div`\r\n  width: 100%;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  overflow-y: hidden;\r\n  overflow-x: hidden;\r\n`;\r\n\r\n\r\n","import { useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport BasicContainer from '../shared/BasicContainer';\r\nimport { Context } from '../shared/Context';\r\n\r\nexport default function NameInput(props) {\r\nlet context = useContext(Context);\r\n  let [focus, setFocus] = useState(false);\r\n  let [input, setInput] = useState('');\r\n\r\n  const handleKeyPress = (e) => {\r\n      if (e.keyCode === 13) {\r\n          e.target.blur();\r\n          context.setSession(input)\r\n      }\r\n  }\r\n\r\n  const handleBlur = () => {\r\n      setFocus(false);\r\n      props.setSessionName(input);\r\n      context.setSession(input)\r\n  }\r\n\r\n  return(\r\n    <BasicContainer flex>\r\n        <StyledInput \r\n            type=\"text\" \r\n            placeholder = \"Enter Session Name\"\r\n            value={input}\r\n            onInput={(e) => setInput(e.target.value)}\r\n            onFocus={(e) => setFocus(true)}\r\n            onBlur={(e) => handleBlur()}\r\n            onKeyDown={(e) => {handleKeyPress(e)}}\r\n            focus={focus}\r\n        />\r\n    </BasicContainer>\r\n  );\r\n}\r\n\r\nconst StyledInput = styled.input`\r\n    border: none;\r\n    padding-top: 3px;\r\n    width: 100%;\r\n    font-weight: ${props => (props.focus ? \"normal\" : \"bold\")} ;\r\n    ::placeholder {\r\n        font-weight: normal;\r\n    }\r\n    text-overflow: ellipsis;\r\n    :focus {\r\n        outline: none;\r\n    }\r\n`;","import { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport BasicContainer from '../shared/BasicContainer';\r\n\r\nexport default function AddressInput(props) {\r\n  let [focus, setFocus] = useState(false);\r\n  let [input, setInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    props.setSocketURL(input);\r\n  }, [input])\r\n\r\n  const handleKeyPress = (e) => {\r\n      if (e.keyCode === 13) {\r\n          e.target.blur();\r\n      }\r\n  }\r\n\r\n  const handleBlur = () => {\r\n      setFocus(false);\r\n  }\r\n\r\n  return(\r\n    <BasicContainer flex>\r\n        <StyledInput \r\n            type=\"text\" \r\n            placeholder = \"Enter Server Address\"\r\n            value={input}\r\n            onInput={(e) => setInput(e.target.value)}\r\n            onFocus={(e) => setFocus(true)}\r\n            onBlur={(e) => handleBlur()}\r\n            onKeyDown={(e) => {handleKeyPress(e)}}\r\n            focus={focus}\r\n            connected={props.connected}\r\n        />\r\n    </BasicContainer>\r\n  );\r\n}\r\n\r\nconst StyledInput = styled.input`\r\n    border: none;\r\n    padding-top: 3px;\r\n    width: 100%;\r\n    font-weight: ${props => (props.focus ? \"normal\" : \"bold\")} ;\r\n    ::placeholder {\r\n        font-weight: normal;\r\n    }\r\n    text-overflow: ellipsis;\r\n    :focus {\r\n        outline: none;\r\n    }\r\n    color: ${props => (props.focus ? \"black\" : (props.connected ? '#42D060' : '#BE0707')) } ;\r\n`;","export default __webpack_public_path__ + \"static/media/logo.7c344053.png\";","import styled from 'styled-components';\r\n\r\nimport Toggle from './Toggle';\r\nimport SensorSelector from './SensorSelector';\r\nimport NameInput from './NameInput';\r\nimport AddressInput from './AddressInput';\r\nimport BasicContainer from '../shared/BasicContainer';\r\nimport VertSpacer from '../shared/VertSpacer';\r\n\r\n\r\nimport logo from '../../assets/logo.png';\r\n\r\nexport default function Sidebar(props) {\r\n  return (\r\n    <SidebarContainer>\r\n      <img src={logo} alt='NU Formula Logo' />\r\n      <VertSpacer />\r\n      <BasicContainer>\r\n        <Toggle isLive={props.isLive} setIsLive={(newState) => props.setIsLive(newState)} />\r\n      </BasicContainer>\r\n      <VertSpacer />\r\n      {props.isLive &&\r\n        <>\r\n          <NameInput setSessionName={(newState) => props.setSessionName(newState)}/>\r\n          <VertSpacer />\r\n        </>\r\n      }\r\n      <AddressInput\r\n        setSocketURL={(url) => props.setSocketURL(url)}\r\n        connected={props.connected}\r\n      />\r\n      <VertSpacer />\r\n      <SensorSelector\r\n        currentSensors={props.currentSensors}\r\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\r\n      />\r\n    </SidebarContainer>\r\n  );\r\n}\r\n\r\nconst SidebarContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 240px;\r\n  height: calc(100vh - 60px);\r\n  padding: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;","export default __webpack_public_path__ + \"static/media/cloud.adf8a46f.svg\";","export default __webpack_public_path__ + \"static/media/local.289b4992.svg\";","import React, { Component } from 'react';\r\nimport Select, { components } from 'react-select';\r\nimport cloud_icon from '../../../assets/cloud.svg';\r\nimport local_icon from '../../../assets/local.svg';\r\n// import  { address } from \"../../../apiCalls\";\r\nimport { Context } from '../../shared/Context'\r\n\r\nconst filterOptions = (option, input) => {\r\n    if (input) {\r\n        if (option.data.name.toLowerCase().includes(input.toLowerCase()) || \r\n        dateString(option.data.date).includes(input)){\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n    }\r\n    return true;\r\n    };\r\n\r\nlet fileList = [{name:\"DriveDay10.7.22\", date: new Date(2022,3,5), label: \"DriveDay10.7.23\"}, {name: \"file2\", date:new Date(2021,10,12), label: \"local\"}, \r\n{name: \"file3\", date:new Date(2002,11,11), label: \"cloud\"},{name: \"file4\", date:new Date(2021,9,5), label: \"local\"}];\r\n\r\n\r\nconst dateString = (date) => {\r\n    let day = date.getDate()\r\n    let month = date.getMonth()\r\n    let year = date.getFullYear()\r\n    month = (month + 1 < 10) ? \"0\" + (month + 1) : (month + 1)\r\n    day = (day < 10) ? \"0\" + day : day\r\n    return month + \"/\" + day + \"/\" + year;\r\n}\r\n\r\n\r\nconst { Option } = components;\r\nconst IconOption = props => {\r\n  let icon = (props.data.label == \"cloud\") ? cloud_icon : local_icon \r\n  return(\r\n  <Option {...props}>\r\n    {props.data.name} \r\n    <div style={{display: \"inline\", float: \"right\"}}>\r\n    {dateString(props.data.date)}\r\n    <img\r\n      src={icon}\r\n      style={{ width: 15, marginLeft: 20 }}\r\n      alt={props.data.label}\r\n    />\r\n    </div>\r\n  </Option>\r\n);\r\n}\r\n\r\n\r\nconst address = fetch(\"http://flask-env.eba-hqnsx3mt.us-east-2.elasticbeanstalk.com/get-items\",\r\n{\r\n  method: \"GET\", \r\n  headers: { 'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': \"*\",\r\n            \"Access-Control-Allow-Methods\": \"*\" }\r\n})\r\n.then((response) => response.json())\r\n.then((user) => {\r\nreturn user;\r\n});\r\n\r\nconst printAddress = () => {\r\naddress.then((a) => {\r\nfileList = parseDates(a.Items)\r\n\r\n});\r\n};\r\n\r\nfunction parseDates(inputArray) {\r\nlet res = []\r\nfor (let i = 0; i < inputArray.length; i++) {\r\nlet newDict = {}\r\nnewDict[\"name\"] = inputArray[i][\"Session Name\"];\r\nlet splitDates = inputArray[i][\"Date\"].split(\",\");\r\nnewDict[\"date\"] = new Date(splitDates[0], splitDates[1], splitDates[2]);\r\nnewDict[\"label\"] = \"local\";\r\nres.push(newDict)\r\n}\r\nreturn res\r\n}\r\n\r\nexport default class SearchBar extends Component {\r\n  static contextType = Context;\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {searchVal: null}\r\n    this.myRef = React.createRef();\r\n    this.myAPI = {APIResponse: null}\r\n  }\r\n  handleFocus= () => {\r\n    this.setState({searchVal : null})\r\n    printAddress();\r\n  };\r\n  handleChange = value => {\r\n    this.setState({searchVal : value})\r\n    this.myRef.current.blur()\r\n    printAddress();\r\n    this.context.setSession(value);\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n        <div style={{width: \"100%\", zIndex:\"2\"}}>\r\n        <Select\r\n        ref={this.myRef}\r\n        placeholder={\"Search for file by name or MM/DD/YYYY\"}\r\n        isClearable\r\n        isSearchable\r\n        name=\"search\"\r\n        options={fileList}\r\n        filterOption={filterOptions}\r\n        onFocus={this.handleFocus}\r\n        onChange={this.handleChange}\r\n        getOptionLabel={option =>\r\n            `${option.name} (${dateString(option.date)})`\r\n        }\r\n        components={{ Option: IconOption }}\r\n        value = {this.state.searchVal}\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport default function HorizSpacer() {\r\n  return(\r\n    <ButtonSpacer />\r\n  );\r\n}\r\n\r\nconst ButtonSpacer = styled.div`\r\n  width: 20px;\r\n`;","export default __webpack_public_path__ + \"static/media/upload.23c86021.svg\";","import { useRef, useState } from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nimport HorizSpacer from \"../../shared/HorizSpacer\";\r\n\r\nimport upload from '../../../assets/upload.svg';\r\n\r\nexport default function ButtonTray() {\r\n  const [file, setFile] = useState(null)\r\n\r\n  const uploadRef = useRef(null);\r\n\r\n  const handleFiles = (e) => {\r\n    let f = e.target.files[0];\r\n    setFile(f);\r\n  }\r\n\r\n  return(\r\n    <UploadHolder>\r\n      <input type='file' hidden ref={uploadRef} onChange={(e) => {handleFiles(e)}} />\r\n      <HorizSpacer />\r\n      <Clickable src={upload} alt='upload' width='25px' height='25px' onClick={() => {uploadRef.current.click()}} />\r\n      <HorizSpacer />\r\n    </UploadHolder>\r\n  );\r\n}\r\n\r\nconst UploadHolder = styled.div`\r\n  flex: 0.1;\r\n  max-width: 110px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: right;\r\n`;\r\n\r\nconst Clickable = styled.img`\r\n  cursor: pointer;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport default function SVGButton(props) {\r\n  return(\r\n    <StyledSVG\r\n      src={props.src}\r\n      alt={props.label}\r\n      width='25px'\r\n      height='25px'\r\n      onClick={() => {props.setViewState(props.label)}}\r\n      selected={props.selected}\r\n    />\r\n  );\r\n}\r\n\r\nconst StyledSVG = styled.img`\r\n  cursor: pointer;\r\n  filter: brightness(${props => (props.selected ? 0.5 : 1)});\r\n  transition: 0.07s ease;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default function RowHolder(props) {\r\n  return(\r\n    <StyledHolder>\r\n      {props.children}\r\n    </StyledHolder>\r\n  );\r\n}\r\n\r\nconst StyledHolder = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;","export default __webpack_public_path__ + \"static/media/stop.a5149737.svg\";","export default __webpack_public_path__ + \"static/media/play.04c7d97b.svg\";","export default __webpack_public_path__ + \"static/media/pause.d6780492.svg\";","import { Context } from \"../../shared/Context\"\r\nimport React, { useCallback, useState, useEffect, useRef, useContext } from 'react'\r\n\r\nimport SVGButton from './SVGButton';\r\nimport RowHolder from '../../shared/RowHolder';\r\nimport HorizSpacer from '../../shared/HorizSpacer';\r\n\r\nimport stop from '../../../assets/stop.svg';\r\nimport play from '../../../assets/play.svg';\r\nimport pause from '../../../assets/pause.svg';\r\n\r\nexport default function Topbar(props) {\r\n  let context = useContext(Context);\r\n  function changeLiveStatus(buttonState) {\r\n    if (buttonState == \"play\"){\r\n      context.setIsLive = true\r\n    }\r\n    else if (buttonState == \"pause\" || buttonState == \"stop\") {\r\n      context.setIsLive = false\r\n    }\r\n  }\r\n  return (\r\n    <RowHolder>\r\n      <SVGButton\r\n        src={stop}\r\n        label={'stop'}\r\n        setViewState={props.setViewState}\r\n        selected={props.viewState === 'stop'}\r\n      />\r\n      <HorizSpacer />\r\n      {props.viewState !== 'play'\r\n        ? <SVGButton\r\n            src={play}\r\n            label={'play'}\r\n            setViewState={props.setViewState}\r\n            selected={props.viewState === 'pause'}\r\n          />\r\n        : <SVGButton\r\n            src={pause}\r\n            label={'pause'}\r\n            setViewState={props.setViewState}\r\n            selected={props.viewState === 'play,'}\r\n          />\r\n      }\r\n    </RowHolder>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport default function StyledStatus(props) {\r\n  return(\r\n    <Status valid={props.valid}>\r\n      {props.children}\r\n    </Status>\r\n  );\r\n}\r\n\r\nconst Status = styled.div`\r\n  color: ${props => (props.valid ? '#42D060' : '#BE0707')}\r\n`;","import styled from 'styled-components';\r\n\r\nimport SearchBar from './SearchBar';\r\nimport Upload from './Upload';\r\nimport ButtonTray from './ButtonTray';\r\nimport RowHolder from '../../shared/RowHolder';\r\nimport StyledStatus from '../../shared/StyledStatus';\r\n\r\nexport default function Topbar(props) {\r\n  var display;\r\n  if (props.isLive) {\r\n    display =\r\n      <>\r\n        <RowHolder>\r\n          Status:\r\n          {props.receiving\r\n            ? <StyledStatus valid> Reading Live Data</StyledStatus> // Keep whitespace before text\r\n            : <StyledStatus> No Data Received</StyledStatus>        // Keep whitespace before text\r\n          }\r\n        </RowHolder>\r\n        <ButtonTray viewState={props.viewState} setViewState={props.setViewState} />\r\n      </>;\r\n  } else {\r\n    display =\r\n    <>\r\n      <SearchBar/>\r\n      {/* <Upload /> */}\r\n    </>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {display}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  width: calc(100% + 16px);\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport default function NumGraphToggle(props) {\r\n  const handleClick = () => {\r\n    if (props.dispType === 'graphs') {\r\n      props.setDispType('numbers');\r\n    } else {\r\n      props.setDispType('graphs');\r\n    }\r\n  }\r\n\r\n  return(\r\n    <ReferenceFrame>\r\n      <StyledDiv>\r\n        <LabelHolder onClick={() => handleClick()}>\r\n          <Label active={props.dispType === 'graphs'}>Graph</Label>\r\n          <Label active={props.dispType === 'numbers'}>Number</Label>\r\n        </LabelHolder>\r\n        <Overlay onClick={() => handleClick()} isLeft={props.dispType === 'graphs'} />\r\n      </StyledDiv>\r\n    </ReferenceFrame>\r\n  );\r\n}\r\n\r\nconst ReferenceFrame = styled.div`\r\n  position: relative;\r\n  float: right;\r\n  right: 136px;\r\n  top: -42px;\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 136px;\r\n  height: 34px;\r\n  top: 0;\r\n  left: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst LabelHolder = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 8px;\r\n  background: #fafafa;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: ${props => (props.active ? '#000' : '#838181')};\r\n  font-size: 12px;\r\n  z-index: 1;\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.1s ease;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: ${props => (props.isLeft ? 0 : 68)}px;\r\n  width: 68px;\r\n  height: 100%;\r\n  background-color: #e5e4fB;\r\n  display: inline;\r\n  border-top-left-radius: ${props => (props.isLeft ? 8 : 0)}px;\r\n  border-bottom-left-radius: ${props => (props.isLeft ? 8 : 0)}px;\r\n  border-top-right-radius: ${props => (props.isLeft ? 0 : 8)}px;\r\n  border-bottom-right-radius: ${props => (props.isLeft ? 0 : 8)}px;\r\n  transition: all 0.1s ease;\r\n`;","export default __webpack_public_path__ + \"static/media/scrollleft.021006b1.svg\";","export default __webpack_public_path__ + \"static/media/scrollright.87918043.svg\";","export default __webpack_public_path__ + \"static/media/zoomin.ffee9cd4.svg\";","export default __webpack_public_path__ + \"static/media/zoomout.25ba6bef.svg\";","export default __webpack_public_path__ + \"static/media/recent.59f0d284.svg\";","import React, { useCallback, useState, useEffect, useRef, useContext } from 'react'\r\nimport { max, bisector } from 'd3-array';\r\nimport { MarkerCircle } from '@visx/marker';\r\nimport { useTooltip } from '@visx/tooltip';\r\nimport { localPoint } from '@visx/event';\r\nimport { Group } from '@visx/group';\r\nimport { LinePath, Bar, Line, AreaClosed } from '@visx/shape';\r\nimport * as allCurves from '@visx/curve';\r\nimport { scaleLinear } from '@visx/scale';\r\nimport { AxisLeft, AxisBottom } from '@visx/axis';\r\nimport styled from \"styled-components\";\r\nimport scrollleft from '../../../assets/scrollleft.svg';\r\nimport scrollright from '../../../assets/scrollright.svg';\r\nimport zoomin from '../../../assets/zoomin.svg';\r\nimport zoomout from '../../../assets/zoomout.svg';\r\nimport recent from '../../../assets/recent.svg';\r\nimport { GridRows, GridColumns } from '@visx/grid';\r\nimport { TooltipWithBounds } from '@visx/tooltip';\r\nimport { Context} from \"../../shared/Context\"\r\n\r\n\r\n\r\n/*****************  INIT (but its british??)  ****************/\r\nconst n = 20; // amount of seconds to show\r\nlet initData = initialise(); //data arr\r\nfunction initialise() {\r\n    var time = -1;\r\n    var arr = [];\r\n    var data_length = 1;\r\n    for (var i = 0; i < data_length; i++) {\r\n        var obj = {\r\n            time: ++time,\r\n            // value: Math.floor(Math.random() * 100)\r\n            value: 0\r\n        };\r\n        arr.push(obj);\r\n    }\r\n    return arr;\r\n}\r\n\r\n\r\n\r\n// CONTINUOUSLY CALL API TO UPDATE REACT ON CHANGES IN\r\n\r\nexport default function Graph(props) {\r\n    let context = useContext(Context);\r\n    /*****************  CONSTANTS  ****************/\r\n    const height = 300\r\n    const width = props.width > 500 ? props.width * 0.9 : 450\r\n    const graph_offset = 30\r\n    const curveType = 'curveLinear'\r\n    // data accessors\r\n    const getX = (d) => d.time;\r\n    const getY = (d) => d.value;\r\n    const ExampleSensorsLettersToNames = {\r\n        \"Front Left Wheel Speed\": [\"FL_WHEEL_SPEED\", \"Speed (m/s)\"],\r\n        \"Brake Pressure\": [\"BRAKE_PRESSURE\", \"Pounds/Square-Inch (PSI)\"],\r\n        \"HV Battery Voltage\": [\"HV_BATTERY_VOLTAGE\", \"Volts (V)\"],\r\n        \"Battery Temperature\": [\"BATTERY_TEMP\", \"Temperature (°C)\"],\r\n        \"Coolant Temperature\": [\"COOLANT_TEMP\", \"Temperature (°C)\"],\r\n        \"Power Output\": [\"POWER_OUTPUT\", \"Power (kW)\"],\r\n        \"State of Charge (SoC)\": [\"CHARGE_STATE\", \"Percent (%)\"],\r\n        \"Throttle\": [\"THROTTLE\", \"Percent (%)\"],\r\n        \"Motor Temperature\": [\"MOTOR_TEMP\", \"Temperature (°C)\"]\r\n      }\r\n    // scales\r\n\r\n    let xScaleInit = scaleLinear({\r\n        domain: [0, max(initData, getX)],\r\n        range: [0, width - 3*graph_offset]\r\n    });\r\n    let yScaleInit = scaleLinear({\r\n        domain: [0, max(initData, getY) * 1.2],\r\n        range: [height * 0.85, height * 0.1]\r\n    });\r\n    \r\n    // state variables\r\n    const [graphData, setGD] = useState({lineData: initData, xScale: xScaleInit, yScale: yScaleInit, start:0, end:initData.length-1});\r\n    const [isScrolling, setScrolling] = useState(false)\r\n    const wheelTimeout = useRef()\r\n    const buttonRef = useRef(null)\r\n    const [count, setCount] = useState(0)\r\n    const [clickCount, setClickCount] = useState(100)\r\n    const [orient, setOrient] = useState(0)\r\n    var historical_count = 0\r\n    \r\n    /*****************  UPDATERS  ****************/\r\n    // automate the clicking (or updating) of the live graph\r\n\r\n    //autopopulate the graph during live\r\n\r\n    useEffect(() => {\r\n        let graphsArr = document.getElementsByClassName(\"clickMe\")\r\n          if (context.live) {\r\n            for (let i = 0; i < graphsArr.length; i++) {\r\n                graphsArr[i].click();\r\n              }\r\n          }\r\n      }, [context.sensorData]);\r\n\r\n    // historical autopopulate\r\n    //   useEffect(() => {\r\n    //     const interval = setInterval(() => {\r\n    //     let graphsArr = document.getElementsByClassName(\"clickMe\")\r\n    //     setClickCount(clickCount+1)\r\n    //       if (!context.live && count < clickCount) {\r\n    //         for (let i = 0; i < graphsArr.length; i++) {\r\n    //             graphsArr[i].click();\r\n    //           }\r\n    //       }\r\n    //     }, 1000);\r\n    //     return () => clearInterval(interval);\r\n    //   }, []);\r\n\r\n\r\n      /***************** UPDATES **********************/\r\n\r\n    function updateScales(){\r\n        let start_idx = Math.floor(graphData.start)\r\n        let fake_idx = max([Math.ceil(graphData.end)-1, 0])\r\n        let end_idx = max([Math.ceil(graphData.end), 0])\r\n        let xscale = scaleLinear({\r\n            domain: [getX(graphData.lineData[start_idx]), getX(graphData.lineData[fake_idx])],\r\n            range: [0, width - 3*graph_offset]\r\n        });\r\n        let yscale = scaleLinear({\r\n            domain: [0, max(graphData.lineData.slice(start_idx, end_idx), getY) * 1.2],\r\n            range: [height * 0.85, height * 0.1]\r\n        })\r\n        setGD(prevState => ({\r\n            ...prevState,\r\n            xScale: xscale,\r\n            yScale: yscale\r\n        }));\r\n    }\r\n\r\n    // function parseTimeInt(timeStr){\r\n    //     let timeArr = timeStr.split(\":\")\r\n    //     return parseInt(timeArr[0])*60+parseInt(timeArr[1])\r\n    // }\r\n\r\n    function parseUnixToStr(unixVal) {\r\n        let unix_timestamp = unixVal\r\n        // Create a new JavaScript Date object based on the timestamp\r\n        // multiplied by 1000 so that the argument is in milliseconds, not seconds.\r\n        var date = new Date(unix_timestamp * 1000);\r\n        // Hours part from the timestamp\r\n        var hours = date.getHours();\r\n        // Minutes part from the timestamp\r\n        var minutes = \"0\" + date.getMinutes();\r\n        // Seconds part from the timestamp\r\n        var seconds = \"0\" + date.getSeconds();\r\n\r\n        // Will display time in 10:30:23 format\r\n        var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\r\n        return formattedTime\r\n    }\r\n\r\n    function parseSecToTime(seconds) {\r\n        var hours = parseInt(Math.floor(seconds / 3600))\r\n        var minutes = parseInt(Math.floor((seconds % 3600) / 60))\r\n        var cleanSeconds = parseInt((seconds % 3600) % 60)\r\n        const milDiff = seconds-parseInt(seconds)\r\n        var milliseconds = 10*(Math.round(1000*milDiff)/1000);\r\n        return hours + \":\" + minutes + \":\" + cleanSeconds + \".\" + milliseconds\r\n\r\n    }\r\n\r\n    function updateData(gd, e) {\r\n\r\n        let sensorArr = context.sensorData[ExampleSensorsLettersToNames[props.sensorName][0]]\r\n        // setClickCount(sensorArr.length)\r\n        if (sensorArr) {\r\n            // setCount(sensorArr.length-1)\r\n        if (count < sensorArr.length-1) {\r\n            setCount(count + 1)\r\n            setOrient(count+1)\r\n        }\r\n        var tvPair = sensorArr[sensorArr.length-1]\r\n        if (count >= sensorArr.length) {\r\n            if (sensorArr !== []) {\r\n                let tvPair = context.sensorData[ExampleSensorsLettersToNames[props.sensorName]][sensorArr.length-1[0]]\r\n            }\r\n        }\r\n        else{\r\n            tvPair = context.sensorData[ExampleSensorsLettersToNames[props.sensorName][0]][count]\r\n        }\r\n        if (count >= sensorArr.length-1) {\r\n            return\r\n        }\r\n        let start = gd.start\r\n        if (gd.end >= n) { // overloaded data\r\n            start = gd.start + 1;\r\n        }\r\n        let end = gd.end + 1;\r\n        var firstTime =  context.sensorData[ExampleSensorsLettersToNames[props.sensorName][0]][0][0]\r\n\r\n        var currTime = parseUnixToStr(tvPair[0])\r\n        var obj = {\r\n            time: tvPair[0]-firstTime,\r\n            value: tvPair[1]\r\n        };\r\n\r\n        let temp = [...gd.lineData];\r\n        temp.push(obj);\r\n        if (isScrolling){\r\n            setGD(prevState => ({\r\n                ...prevState,\r\n                lineData: temp,\r\n              }));\r\n              setScrolling(!isScrolling)\r\n        } else {\r\n            setGD(prevState => ({\r\n                ...prevState,\r\n                lineData: temp,\r\n                start: start,\r\n                end: end\r\n              }));\r\n        }\r\n        handleTooltip(e);\r\n    }\r\n    }\r\n\r\n\r\n    /*****************  MOUSE AND KEY SHITSHOW  ****************/\r\n    function lockWheel(){\r\n        // while wheel is moving, do not release the lock\r\n        clearTimeout(wheelTimeout.current)\r\n\r\n        // flag indicating to lock page scrolling (setTimeout returns a number)\r\n        wheelTimeout.current = setTimeout(() => {\r\n        wheelTimeout.current = false\r\n        }, 300)\r\n    }\r\n\r\n    function handleMouseScroll(e){\r\n        let gd = graphData;\r\n        let dir;\r\n        let scroll_amt = 0.2;\r\n        let zoom_amt = 0.2;\r\n        \r\n        lockWheel()\r\n\r\n        if (Math.abs(e.deltaX) > Math.abs(e.deltaY) && Math.abs(e.deltaX) > 1){\r\n            (e.deltaX < 0) ? dir = \"right\" : dir = \"left\"\r\n            if (!isScrolling){\r\n                setScrolling(true)\r\n            }\r\n            scroll(gd, dir, scroll_amt,e)\r\n            \r\n        } else {\r\n            (e.deltaY < 0) ? dir = \"in\" : dir = \"out\"\r\n            zoom(gd, dir, zoom_amt,e)\r\n        }\r\n    }\r\n\r\n    function zoom(gd, dir, amt,e){\r\n        let start;\r\n        if (dir == \"in\"){\r\n            if (gd.start < (gd.end - 2)) {\r\n                start = gd.start + amt\r\n            } else {return}\r\n        } else if (dir == \"out\"){\r\n            if (gd.start > amt) {\r\n                start = gd.start - amt\r\n            } else {return}\r\n        }\r\n        setGD(prevState => ({\r\n            ...prevState,\r\n            start: start,\r\n        }));\r\n        handleTooltip(e);\r\n    }\r\n\r\n    function scroll(gd, dir, amt,e){\r\n        let start, end;\r\n        if (dir == \"right\"){\r\n            if (orient >= count){return}\r\n            else{setOrient(orient+1)}\r\n            if (gd.end < max(gd.lineData, getX) - amt) {\r\n                start = gd.start + amt\r\n                end = gd.end + amt\r\n            } else {return}\r\n        } else if (dir == \"left\" || orient <= 0){\r\n            if (gd.start <= 1){return}\r\n            else{setOrient(orient-1)}\r\n            if (gd.start > amt) {\r\n                start = gd.start - amt\r\n                end = gd.end - amt\r\n            } else {return}\r\n        }\r\n        if (Math.ceil(end) == graphData.lineData.length - 1){\r\n            setScrolling(false);\r\n        }\r\n        setGD(prevState => ({\r\n            ...prevState,\r\n            start: start,\r\n            end: end\r\n        }));\r\n        handleTooltip(e);\r\n    }\r\n\r\n    function checkKey(e) {\r\n        if (e.keyCode == '38') { zoom(graphData, \"in\", 1); lockWheel(); // up arrow \r\n        } else if (e.keyCode == '40') { zoom(graphData, \"out\", 1); lockWheel() // down arrow\r\n        } else if (e.keyCode == '37') { scroll(graphData, \"left\", 1); lockWheel() // left arrow \r\n        } else if (e.keyCode == '39') { scroll(graphData, \"right\", 1); lockWheel() // right arrow\r\n        } else if (e.keyCode == '65') { updateData(graphData, e)// space\r\n        }\r\n    }\r\n\r\n    function jump_recent(e){\r\n        let start, end\r\n        let jump = graphData.lineData.length - 1 - graphData.end\r\n        end = graphData.end + jump\r\n        start = graphData.start + jump\r\n        setScrolling(false);\r\n        setGD(prevState => ({\r\n            ...prevState,\r\n            start: start,\r\n            end: end\r\n        }));\r\n    }\r\n\r\n    /*****************  USE EFFECT BULLSHIT  ****************/\r\n    useEffect(() => {\r\n        const cancelWheel = e => wheelTimeout.current && e.preventDefault()\r\n        document.body.addEventListener('wheel', cancelWheel, {passive:false})\r\n        return () => document.body.removeEventListener('wheel', cancelWheel)\r\n    }, [])\r\n    useEffect(() => {\r\n        updateScales()\r\n    }, [graphData.lineData, graphData.start, graphData.end])\r\n    /*****************  TOOLTIP BULLSHIT  ****************/\r\n    // takes left of time\r\n    const bisectTime = bisector((d) => d.time).left;\r\n     // a bunch of tooltip defs\r\n    const { showTooltip,\r\n        tooltipData,\r\n        hideTooltip,\r\n        tooltipTop = 0,\r\n        tooltipLeft = 0, } = useTooltip();\r\n    // tooltip handler\r\n    const handleTooltip = useCallback(\r\n        (event) => {\r\n          let {x} = localPoint(event) || {x: graph_offset*2}; // x of mouse\r\n          x -= (graph_offset*2)\r\n          const x0 = graphData.xScale.invert(x); // maps x -> time \r\n          const index = bisectTime(graphData.lineData, x0, 1); // finds index of the middle time\r\n          const d0 = graphData.lineData[index - 1]; \r\n          const d1 = graphData.lineData[index];\r\n          let d = d0;\r\n          if (d1 && getX(d1)) {\r\n            d = x0.valueOf() - getX(d0).valueOf() > getX(d1).valueOf() - x0.valueOf() ? d1 : d0;\r\n          }\r\n          showTooltip({\r\n            tooltipData: d,\r\n            tooltipLeft: graphData.xScale(getX(d)),\r\n            tooltipTop: graphData.yScale(getY(d)),\r\n          });\r\n        },\r\n        [showTooltip, graphData.yScale, graphData.xScale],\r\n      );\r\n\r\n\r\n\r\n  return (\r\n        <GraphContainer\r\n            onKeyDown={(e) => checkKey(e)}\r\n            onMouseEnter={() => {props.sendIndex(); props.sendStart();}}\r\n            onMouseLeave={() => {props.removeIndex(); props.removeStart();}}\r\n        >\r\n            <button className='clickMe' onClick={(e) => updateData(graphData,e)}>update</button> <br/>\r\n            {/* navigation buttons */}\r\n            <ButtonTray width={width}>\r\n                <div>\r\n                <Clickable src={scrollleft} alt='scroll left' width='25px' height='25px' onClick={(e) => {scroll(graphData, \"left\", 1, e)}} />\r\n                <Clickable src={scrollright} alt='scroll right' width='25px' height='25px' onClick={(e) => {scroll(graphData, \"right\", 1, e)}} />\r\n                </div>\r\n                <div>\r\n                <Clickable src={zoomin} alt='zoom in' width='25px' height='25px' onClick={(e) => {zoom(graphData, \"in\", 1,e)}} />\r\n                <Clickable src={zoomout} alt='zoom out' width='25px' height='25px' onClick={(e) => {zoom(graphData, \"out\", 1,e)}} />\r\n                </div>\r\n                <Clickable src={recent} alt='recent' width='25px' height='25px' onClick={(e) => {jump_recent(e)}} />\r\n            </ButtonTray>\r\n            <SVGContainer width={width}>\r\n            <div>{props.sensorName}</div>\r\n            {/* graph  */}\r\n            <svg width={width} height={height} onWheel={(e) => handleMouseScroll(e)}>\r\n                <MarkerCircle id=\"marker-circle\" fill=\"#5048E5\" size={1} refX={2} /> {/* pretty point */}\r\n                <rect width={width} height={height } fill=\"#fff\" rx={14} ry={14} /> {/* border rect */}\r\n                <Group left={graph_offset*2}>\r\n                    {/* axis and grids */}\r\n                    <GridRows scale={graphData.yScale} width={width - graph_offset*3} stroke=\"#e0e0e0\"/>\r\n                    <GridColumns scale={graphData.xScale} height={height-60} stroke=\"#e0e0e0\" top={30}/>\r\n                    <AxisBottom left={0} top={height-45} scale={graphData.xScale} stroke='#838181' label={\"Time\"} tickFormat={(value: number, i: number) =>parseSecToTime(value)} />\r\n                    <AxisLeft left={0} scale={graphData.yScale} stroke='#838181' label={ExampleSensorsLettersToNames[props.sensorName][1]}/>\r\n                    {/* plots line */}\r\n                    {graphData.lineData.slice(Math.floor(graphData.start), Math.floor(graphData.end)).map((d, j) => (\r\n                        <circle\r\n                        key={j}\r\n                        r={2}\r\n                        cx={graphData.xScale(getX(d))}\r\n                        cy={graphData.yScale(getY(d))}\r\n                        stroke=\"#5048E5\"\r\n                        />\r\n                    ))}\r\n                    <LinePath\r\n                    curve={allCurves[curveType]}\r\n                    data={graphData.lineData.slice(Math.floor(graphData.start), Math.ceil(graphData.end))}\r\n                    x={(d) => graphData.xScale(getX(d)) ?? 0}\r\n                    y={(d) => graphData.yScale(getY(d)) ?? 0}\r\n                    stroke=\"#5048E5\"\r\n                    strokeWidth={2}\r\n                    strokeOpacity={1}\r\n                    shapeRendering=\"geometricPrecision\"\r\n                    markerMid=\"url(#marker-circle)\"\r\n                    markerStart=\"url(#marker-circle)\"\r\n                    markerEnd=\"url(#marker-circle)\"\r\n                    />\r\n                    {/* shades in area under the curve */}\r\n                    <AreaClosed\r\n                        fill=\"#5048E515\"\r\n                        curve={allCurves[curveType]}\r\n                        data={graphData.lineData.slice(Math.floor(graphData.start), Math.ceil(graphData.end))}\r\n                        x={(d) => graphData.xScale(getX(d)) ?? 0}\r\n                        y={(d) => graphData.yScale(getY(d)) ?? 0}\r\n                        yScale={graphData.yScale}\r\n                    />\r\n                    {/* tooltip handling (just line and bar) */}\r\n                    <Bar\r\n                        x={0}\r\n                        y={0}\r\n                        width={width}\r\n                        height={height}\r\n                        fill=\"transparent\"\r\n                        rx={14}\r\n                        onTouchStart={handleTooltip}\r\n                        onTouchMove={handleTooltip}\r\n                        onMouseMove={handleTooltip}\r\n                        onMouseLeave={() => hideTooltip()}\r\n                    />\r\n                    {tooltipData && (\r\n                        <g>\r\n                            <Line\r\n                            from={{ x: tooltipLeft, y: height * 0.08 }}\r\n                            to={{ x: tooltipLeft, y: height * 0.85}}\r\n                            stroke=\"#5048E5\"\r\n                            strokeWidth={2}\r\n                            pointerEvents=\"none\"\r\n                            strokeDasharray=\"5,2\"\r\n                            />\r\n                            <circle\r\n                            cx={tooltipLeft}\r\n                            cy={tooltipTop + 1}\r\n                            r={4}\r\n                            fill=\"black\"\r\n                            fillOpacity={0.1}\r\n                            stroke=\"black\"\r\n                            strokeOpacity={0.1}\r\n                            strokeWidth={2}\r\n                            pointerEvents=\"none\"\r\n                            />\r\n                            <circle\r\n                            cx={tooltipLeft}\r\n                            cy={tooltipTop}\r\n                            r={4}\r\n                            fill=\"#5048E5\"\r\n                            stroke=\"white\"\r\n                            strokeWidth={2}\r\n                            pointerEvents=\"none\"\r\n                            />\r\n                        </g>\r\n                    )})\r\n                </Group>\r\n                );\r\n            </svg>\r\n            </SVGContainer>\r\n            {/* tooltip labeling */}\r\n            {tooltipData && (\r\n            <div>\r\n                <TooltipWithBounds\r\n                    key={Math.random()}\r\n                    top={tooltipTop + 15}\r\n                    left={tooltipLeft + 40}\r\n                    \r\n                >\r\n                    {`${getY(tooltipData)}`}\r\n              </TooltipWithBounds>\r\n            </div>\r\n          )}\r\n        </GraphContainer>\r\n    )}\r\n\r\nconst Clickable = styled.img`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ButtonTray = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 30px;\r\n  left: ${props=> props.width - 40}px ;\r\n`\r\n\r\nconst GraphContainer = styled.div`\r\n  position: relative;\r\n  margin-top: 7px;\r\n  margin-bottom: 7px;\r\n`;\r\n\r\nconst SVGContainer = styled.div`\r\n  border-radius: 14px;\r\n  border: 1px solid #838181;\r\n  padding: 10px;\r\n  width: ${props=> props.width}px;\r\n`\r\n","import Graph from './Graph';\r\nimport DndList from '../../shared/DnDList';\r\nimport VertSpacer from '../../shared/VertSpacer';\r\nimport React, { useCallback, useState, useEffect, useRef, useContext } from 'react'\r\nimport { Context } from '../../shared/Context';\r\n\r\nexport default function Graphs(props) {\r\n  let context = useContext(Context);\r\n // IF LIVE IS ON, THEN FEED TO API\r\n    useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (context.live && context.session) {\r\n                  let reqBody = {\"desiredSensors\": context.selectedSensors, \"nameOfSession\": context.session}\r\n    \r\n            // POST request with current sensors selected to use for datpoint plotting later\r\n            var sensorData = fetch(\"http://flask-env.eba-hqnsx3mt.us-east-2.elasticbeanstalk.com/get-sensors\", \r\n            {\r\n              method: \"POST\", \r\n              headers: { 'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': \"*\"\r\n            },\r\n            body: JSON.stringify(reqBody)\r\n            })\r\n            .then((response) => response.json())\r\n            .then((user) => {\r\n            return user;\r\n            });\r\n    \r\n            const retrieveSensorAPI = () => {\r\n            sensorData.then((a) => {\r\n            context.setSensorData(a)\r\n            console.log(a)\r\n            });\r\n            };\r\n            retrieveSensorAPI();\r\n      }\r\n    }, 200);\r\n    // return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <DndList\r\n      items={props.sensors}\r\n      vspace={7}\r\n      setCurrentItems={(x) => props.setCurrentSensors(x)}\r\n    >\r\n      {props.sensors.map((e, index) => {\r\n        return (\r\n          <Graph\r\n            width={props.width}\r\n            sensorName={e.label}\r\n            key={index}\r\n            rerender={() => {props.rerender()}}\r\n          />\r\n        );\r\n      })}\r\n    </DndList>\r\n  );\r\n}","import styled from 'styled-components';\r\n\r\nexport default function VertIndicator(props) {\r\n  return(\r\n    <Line height={props.height} x={props.x} y={props.y} />\r\n  )\r\n}\r\n\r\nconst Line = styled.div`\r\n  height: ${props => props.height}px;\r\n  border-left: 2px solid #564fe6;\r\n  position: fixed;\r\n  left: ${props => props.x}px;\r\n  top: ${props => props.y}px;\r\n`;","import React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport VertIndicator from './VertIndicator';\r\n\r\nimport useMouse from '../hooks/useMouse';\r\n\r\nimport { Context } from './Context';\r\n\r\n// Expected Props:\r\n/// items             list of dnd items\r\n/// itemWidth         width of child element\r\n/// itemHeight        height of child element\r\n/// vspace            vertical space between rows\r\n/// setCurrentItems   item setter\r\nexport default function DndFlex(props) {\r\n  let context = useContext(Context);\r\n  const { mouseX, mouseY } = useMouse();\r\n\r\n  const [state, setState] = useState({\r\n    startInd: -1,   // index of item that is being dragged\r\n    indicator: {\r\n      x: 0,         // coordinates of the dnd indicator\r\n      y: 0,\r\n    },\r\n    flexProps: {\r\n      cols: 0,      // # of columns in normal row\r\n      extraCols: 0, // # of columns in extra row\r\n      rows: 0,      // # of full rows\r\n    },\r\n    canDrop: true,\r\n  });\r\n  const [proppedChildren, setChildren] = useState(props.children);\r\n\r\n  const dndRef = useRef(null);\r\n\r\n  // Resize Listerners\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  useEffect(() => {\r\n    handleResize();\r\n  }, [props.children]);\r\n\r\n  // Updates the bounding box upon resize\r\n  const handleResize = () => {\r\n    if (dndRef.current) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        bounds: dndRef.current.getBoundingClientRect(),\r\n      }));\r\n    }\r\n  }\r\n\r\n  // Passes drag state to element as prop\r\n  useEffect(() => {\r\n    const addProps = (initProps) => {      \r\n      const updatedChildren = initProps.map((child, index) => {\r\n        return React.cloneElement(child, {\r\n          isDragging: context.dragging && index === state.startInd,\r\n        });\r\n      });\r\n\r\n      return updatedChildren;\r\n    }\r\n\r\n    setChildren(addProps(props.children));\r\n  }, [props.children, state.startInd]);\r\n\r\n  // DnD Handler\r\n  useEffect(() => {\r\n    // Helper for converting drop sector into drop index based on start index\r\n    const getDrop = (sector) => {\r\n      let startSector = 2 * state.startInd;\r\n      if (startSector - 1 <= sector && sector <= startSector + 2) {\r\n        return state.startInd;\r\n      } else if (sector < startSector) {\r\n        return state.startInd - Math.floor((startSector - sector) / 2);\r\n      } else {\r\n        return state.startInd + Math.floor((sector - startSector - 1) / 2);\r\n      }\r\n    }\r\n\r\n    // Ensures that the bounding box has loaded\r\n    if (state.bounds) {\r\n      // Ensures that mouse is in dnd zone\r\n      let sector = getSector(mouseX, mouseY);\r\n      if (sector >= 0) {\r\n        // If item getting dropped\r\n        // if (!context.dragging && state.startInd >= 0 && state.canDrop) {\r\n        if (!context.dragging && state.startInd >= 0) {\r\n          let drop = getDrop(sector);\r\n          \r\n          // Reorder items and propagate change\r\n          let temp = props.items[state.startInd];\r\n          props.items.splice(state.startInd, 1);\r\n          props.items.splice(drop, 0, temp);\r\n          props.setCurrentItems(props.items);\r\n\r\n          // Resets dnd start index\r\n          setState(prevState => ({\r\n            ...prevState,\r\n            startInd: -1,\r\n          }));\r\n        }\r\n\r\n        // Sets dnd start index if starting to drag\r\n        else {\r\n          setState(prevState => ({\r\n            ...prevState,\r\n            startInd: Math.floor(sector / 2),\r\n          }));\r\n        }\r\n      }\r\n    }\r\n  }, [context.dragging]);\r\n\r\n  // DnD Indicator Updating\r\n  useEffect(() => {\r\n    // Helper for updating indicator's coordinates\r\n    const indicatorCoords = (sector) => {\r\n      // Offset based on thickness of indicator in styling\r\n      let indicator_offset = 0.5\r\n\r\n      let x = Math.ceil((sector % (2 * state.flexProps.cols)) / 2);\r\n      let y = Math.floor(sector / (2 * state.flexProps.cols));\r\n\r\n      // Converts x index to x coordinate\r\n      switch(y < state.flexProps.rows) {\r\n        case true:\r\n          x *= (state.bounds.width / state.flexProps.cols) - indicator_offset;\r\n          break;\r\n        default:\r\n          switch(state.flexProps.extraCols) {\r\n            case 1:\r\n              x *= (state.bounds.width / (2 * state.flexProps.extraCols)) - indicator_offset;\r\n              x += (state.bounds.width / (4 * state.flexProps.extraCols));\r\n              break;\r\n            default:\r\n              x *= (state.bounds.width / state.flexProps.extraCols) - indicator_offset;\r\n          }\r\n      }\r\n      // Converts y index to y coordinate\r\n      y *= props.itemHeight + props.vSpace;\r\n\r\n      // Translates to be position relative to screen (rather than bounding box)\r\n      x += state.bounds.left;\r\n      y += state.bounds.top;\r\n      return {\r\n        x,\r\n        y,\r\n      };\r\n    }\r\n\r\n    // If bounds are loaded and mouse is in dnd zone\r\n    // updates the dnd indicator coordinates\r\n    if (state.bounds && state.canDrop) {\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        indicator: indicatorCoords(getSector(mouseX, mouseY)),\r\n      }));\r\n    }\r\n  }, [mouseY, mouseX]);\r\n\r\n  // Stores relevent dimension data when bounds get loaded\r\n  useEffect(() => {\r\n    if (state.bounds) {\r\n      let cols = Math.floor(state.bounds.width / props.itemWidth);\r\n      setState(prevState => ({\r\n        ...prevState,\r\n        flexProps: {\r\n          cols,\r\n          extraCols: props.items.length % cols,\r\n          rows: Math.floor(props.items.length / cols),\r\n        },\r\n      }));\r\n    }\r\n  }, [state.bounds]);\r\n\r\n  // Gets the dnd sector that the mouse is in\r\n  const getSector = (_x, _y) => {\r\n    // Relative distance of mouse from corner of bounding box\r\n    let dy = _y - (state.bounds.top + (.5 * props.vSpace));\r\n    let dx = _x - state.bounds.left;\r\n\r\n    // If out of Bounds\r\n    if (dy < 0 || dy > (state.bounds.height - props.vSpace) || dx < 0 || dx > state.bounds.width) {\r\n      return -1;\r\n    }\r\n\r\n    // Iterates through full rows\r\n    let sector = 0;\r\n    for (let i = 0; i < state.flexProps.rows; i++) {\r\n      if (dy < (props.itemHeight + props.vSpace) * (i + 1)) {\r\n        for (let j = 0; j < (state.flexProps.cols * 2); j++) {\r\n          if (dx < (state.bounds.width / (state.flexProps.cols * 2)) * (j + 1)) {\r\n            return sector;\r\n          }\r\n          sector++;\r\n        }\r\n      } else {\r\n        sector += state.flexProps.cols * 2;\r\n      }\r\n    }\r\n\r\n    // Iterates through extra row\r\n    for (let j = 0; j < (state.flexProps.extraCols * 2); j++) {\r\n      if (dx < (state.bounds.width / (state.flexProps.extraCols * 2)) * (j + 1)) {\r\n        return sector;\r\n      }\r\n      sector++;\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n  return (\r\n    <FlexTray\r\n      vSpace={props.vSpace}\r\n      ref={dndRef}\r\n      onMouseEnter={() => {setState(prevState => ({\r\n        ...prevState,\r\n        canDrop: true,\r\n      }))}}\r\n      onMouseLeave={() => {setState(prevState => ({\r\n        ...prevState,\r\n        canDrop: false,\r\n      }))}}\r\n    >\r\n      {\r\n        (context.dragging && state.startInd >= 0 && state.canDrop) &&\r\n          <VertIndicator\r\n            height={props.itemHeight}\r\n            x={state.indicator.x}\r\n            y={state.indicator.y}\r\n          />\r\n      }\r\n      {proppedChildren}\r\n    </FlexTray>\r\n  );\r\n}\r\n\r\nconst FlexTray = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-top: -${props => props.vSpace}px;\r\n  > * {\r\n    margin-top: ${props => props.vSpace}px;\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport default function Number(props) {\r\n  return(\r\n    <NumberContainer translucent={props.isDragging}>\r\n      <Value>{props.value}</Value>\r\n      <Label unit>{props.unit}</Label>\r\n      <Label>{props.label}</Label>\r\n    </NumberContainer>\r\n  );\r\n}\r\n\r\nconst NumberContainer = styled.div`\r\n  width: 240px;\r\n  height: 190px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid #424242;\r\n  user-select: none;\r\n  opacity: ${props => ((props.translucent) ? '0.4' : '1')};\r\n`;\r\n\r\nconst Value = styled.div`\r\n  font-size: 72px;\r\n  color: ${props => ([\"hsl(\",((props.percentage)*120).toString(10),\",75%,50%)\"].join(\"\"))};\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: ${props => (props.unit ? '#000' : '#818181')};\r\n  margin-bottom: 10px;\r\n`;","import styled from 'styled-components';\r\n\r\nimport DndFlex from '../../shared/DnDFlex';\r\nimport Number from './Number';\r\nimport { Context } from \"../../shared/Context\"\r\nimport React, { useCallback, useState, useEffect, useRef, useContext } from 'react'\r\n// renders each second or whatnot\r\nexport default function Numbers(props) {\r\n  let context = useContext(Context);\r\n // IF LIVE IS ON, THEN FEED TO API\r\n    useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (context.live && context.session) {\r\n                  let reqBody = {\"desiredSensors\": context.selectedSensors, \"nameOfSession\": context.session}\r\n    \r\n            // POST request with current sensors selected to use for datpoint plotting later\r\n            var sensorData = fetch(\"http://flask-env.eba-hqnsx3mt.us-east-2.elasticbeanstalk.com/get-sensors\", \r\n            {\r\n              method: \"POST\", \r\n              headers: { 'Content-Type': 'application/json',\r\n              'Access-Control-Allow-Origin': \"*\"\r\n            },\r\n            body: JSON.stringify(reqBody)\r\n            })\r\n            .then((response) => response.json())\r\n            .then((user) => {\r\n            return user;\r\n            });\r\n    \r\n            const retrieveSensorAPI = () => {\r\n            sensorData.then((a) => {\r\n            context.setSensorData(a)\r\n            });\r\n            };\r\n            retrieveSensorAPI();\r\n      }\r\n    }, 500);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n\r\n  const ExampleSensorsLettersToNames = {\r\n    \"Front Left Wheel Speed\": [\"FL_WHEEL_SPEED\", \"Speed (m/s)\"],\r\n    \"Brake Pressure\": [\"BRAKE_PRESSURE\", \"Pounds/Square-Inch (PSI)\"],\r\n    \"HV Battery Voltage\": [\"HV_BATTERY_VOLTAGE\", \"Volts (V)\"],\r\n    \"Battery Temperature\": [\"BATTERY_TEMP\", \"Temperature  (°C)\"],\r\n    \"Coolant Temperature\": [\"COOLANT_TEMP\", \"Temperature  (°C)\"],\r\n    \"Power Output\": [\"POWER_OUTPUT\", \"Power (kW)\"],\r\n    \"State of Charge (SoC)\": [\"CHARGE_STATE\", \"Percent (%)\"],\r\n    \"Throttle\": [\"THROTTLE\", \"Percent (%)\"],\r\n    \"Motor Temperature\": [\"MOTOR_TEMP\", \"Temperature (°C)\"]\r\n  }\r\n  //context.sensorData[ExampleSensorsLettersToNames[e.value]][context.sensorData[ExampleSensorsLettersToNames[e.value]].length-1][1]}\r\n  function updateSensorValue(sensorName) {\r\n    return context.sensorData[sensorName][context.sensorData[sensorName].length-1][1]\r\n  }\r\n  return (\r\n    <SemiContext>\r\n      <DndFlex\r\n        //scrollHeight={props.scrollHeight}\r\n        vSpace={12}\r\n        itemWidth={240}\r\n        itemHeight={190}\r\n        items={props.sensors}\r\n        setCurrentItems={(x) => props.setCurrentSensors(x)}\r\n      >\r\n        {props.sensors.map((e, index) => {\r\n          return (\r\n            <Number\r\n              //rerender={() => {props.rerender()}}\r\n              value={updateSensorValue(ExampleSensorsLettersToNames[e.value][0])}\r\n              // value={3}\r\n              percentage={e.id}\r\n              unit={(ExampleSensorsLettersToNames[e.value][1])}\r\n              label={e.label}\r\n              key={index}\r\n            />\r\n          );\r\n        })}\r\n      </DndFlex>\r\n    </SemiContext>\r\n  );\r\n}\r\n\r\nconst SemiContext = styled.div`\r\n  position: relative;\r\n`;","import React, { Component, createRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport NumGraphToggle from './NumGraphToggle';\r\nimport Graphs from './Graphs';\r\nimport Numbers from './Numbers';\r\n\r\nimport { Context } from '../../shared/Context';\r\n\r\nimport StyledStatus from '../../shared/StyledStatus';\r\n\r\nexport default class DataDisplay extends Component {\r\n  static contextType = Context;\r\n\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dispType: 'graphs',\r\n      scrollAmt: 0,\r\n      whatthefuck: true,\r\n    }\r\n\r\n    this.containerRef = null;\r\n\r\n    this.setContainerRef = (element) => {\r\n      this.containerRef = element;\r\n    }\r\n\r\n    this.updateWidth = () => {\r\n      if (this.containerRef) {\r\n        this.content = (this.state.dispType==='graphs')\r\n          ? <Graphs\r\n              viewState={this.props.viewState}\r\n              sensors={this.props.sensors}\r\n              setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n              width={this.containerRef ? this.containerRef.clientWidth - 16 : 0}\r\n              rerender={() => {this.setState({ whatthefuck: true })}}\r\n            />\r\n          : <Numbers\r\n              viewState={this.props.viewState}\r\n              scrollHeight={this.state.scrollAmt}\r\n              sensors={this.props.sensors}\r\n              setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n            />;\r\n        this.setState({ whatthefuck: true });\r\n      }\r\n    }\r\n\r\n    this.handleScroll = () => {\r\n      const scrollAmt = this.containerRef.scrollTop;\r\n      this.setState({ scrollAmt });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateWidth);\r\n    this.updateWidth();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWidth);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Container ref={this.setContainerRef} onScroll={this.handleScroll}>\r\n        <NumGraphToggle\r\n          dispType={this.state.dispType}\r\n          setDispType={(x) => this.setState({ dispType: x })}\r\n        />\r\n        {(this.props.sensors && this.props.sensors.length > 0)\r\n          ? this.state.dispType==='graphs'\r\n            ? <Graphs\r\n                viewState={this.props.viewState}\r\n                sensors={this.props.sensors}\r\n                setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n                width={this.containerRef ? this.containerRef.clientWidth - 16 : 0}\r\n                rerender={() => {this.setState({ whatthefuck: true })}}\r\n              />\r\n            : <Numbers\r\n                viewState={this.props.viewState}\r\n                scrollHeight={this.state.scrollAmt}\r\n                sensors={this.props.sensors}\r\n                setCurrentSensors={(newState) => this.props.setCurrentSensors(newState)}\r\n              />\r\n          : <StyledStatus>No Selected Sensors</StyledStatus>\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  border: 1px solid #818181;\r\n  border-radius: 9px;\r\n  padding: 8px;\r\n  height: 100%;\r\n  padding-top: 50px;\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: #dadce0;\r\n    border: 4px solid transparent;\r\n    border-radius: 8px;\r\n    background-clip: padding-box;  \r\n  }\r\n  \r\n  ::-webkit-scrollbar {\r\n    width: 16px;\r\n  }\r\n`;","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Topbar from './topbar/Topbar';\r\nimport DataDisplay from './data-display/DataDisplay';\r\nimport VertSpacer from '../shared/VertSpacer';\r\n\r\nexport default function Main(props) {\r\n  let [viewState, setViewState] = useState('stop');\r\n\r\n  return(\r\n    <MainContainer>\r\n      <Topbar\r\n        isLive={props.isLive}\r\n        receiving={false}\r\n        viewState={viewState}\r\n        setViewState={(newState) => setViewState(newState)}\r\n      />\r\n      <VertSpacer />\r\n      <DataDisplay\r\n        viewState={viewState}\r\n        sensors={props.currentSensors}\r\n        setCurrentSensors={(newState) => props.setCurrentSensors(newState)}\r\n      />\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nconst MainContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 300px;\r\n  height: calc(100vh - 80px);\r\n  width: calc(100vw - 420px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding-left: 60px;\r\n  padding-right: 60px;\r\n  padding-bottom: 30px;\r\n  padding-top: 50px;\r\n`;","import { Component } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport Sidebar from './components/sidebar/Sidebar';\r\nimport Main from './components/main/Main';\r\n\r\nimport React, { useCallback, useState, useEffect, useRef, useContext } from 'react'\r\n\r\nimport { Context } from './components/shared/Context';\r\n\r\nexport default class App extends Component {\r\n  static contextType = Context;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLive: false,\r\n      currentSensors: [],\r\n      sessionName: ''\r\n    }\r\n  }\r\n  updateContextLive() {\r\n    this.context.setIsLive(this.state.isLive)\r\n    // console.log(this.context.session)\r\n  }\r\n  componentDidMount() {\r\n    // every second, update the context's live to the current this.state.isLIve value for later\r\n    const intervalId = setInterval(() => {\r\n      this.updateContextLive()\r\n    }, 1000);\r\n  }\r\n\r\n  handleMouseDown = (e) => {\r\n    this.context.setMouseCoords(e.clientX, e.clientY);\r\n    this.context.setDragging(true);\r\n  }\r\n\r\n  handleMouseUp = (e) => {\r\n    this.context.setMouseCoords(e.clientX, e.clientY);\r\n    this.context.setDragging(false);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div onMouseDown={(e) => {this.handleMouseDown(e)}} onMouseUp={(e) => {this.handleMouseUp(e)}}>\r\n        <GlobalStyle />\r\n        <Sidebar\r\n          isLive={this.state.isLive}\r\n          setIsLive={(next) => this.setState({ isLive: next })}\r\n          currentSensors={this.state.currentSensors}\r\n          setCurrentSensors={(newState) => this.setState({ currentSensors: newState })}\r\n          setSessionName={(newState) => this.setState({ sessionName: newState })}\r\n          setSocketURL={(url) => this.setState({ socketURL: `ws://${url}:443` }, () => {\r\n            if (url) {\r\n              this.updateSocket();\r\n            }\r\n          })}\r\n          connected={this.state.connected}\r\n        />\r\n        <Main\r\n          isLive={this.state.isLive}\r\n          currentSensors={this.state.currentSensors}\r\n          setCurrentSensors={(newState) => this.setState({ currentSensors: newState })}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: 'Open Sans', sans-serif;\r\n  }\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './components/shared/Context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContextProvider>\r\n      <App />\r\n    </ContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}